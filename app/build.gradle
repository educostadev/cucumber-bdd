plugins {
    id 'java'
    id 'maven-publish'

    id 'org.springframework.boot' version '2.6.2'
    id 'io.spring.dependency-management' version '1.0.11.RELEASE'
}

repositories {
    mavenLocal()
    maven {
        url = uri('https://repo.maven.apache.org/maven2/')
    }
}

ext {
    set('springCloudVersion', "2021.0.0")
}
dependencyManagement {
    imports {
        mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
    }
}

configurations {
    cucumberRuntime {
        extendsFrom testImplementation
    }
}

def cucumberVersion= "7.0.0"
def lombokVersion= "1.18.22"

dependencies {
    //Lombok
    compileOnly "org.projectlombok:lombok:$lombokVersion"
    annotationProcessor "org.projectlombok:lombok:$lombokVersion"
    testCompileOnly "org.projectlombok:lombok:$lombokVersion"
    testAnnotationProcessor "org.projectlombok:lombok:$lombokVersion"

    //Spring
    implementation 'org.springframework.boot:spring-boot-starter-web'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    implementation 'org.springframework.cloud:spring-cloud-starter-openfeign'
    testImplementation 'org.springframework.cloud:spring-cloud-starter-openfeign'

    //Cucumber + Junit
    testImplementation "io.cucumber:cucumber-java:$cucumberVersion"
    testImplementation "io.cucumber:cucumber-junit-platform-engine:$cucumberVersion"
    testImplementation "io.cucumber:cucumber-spring:$cucumberVersion"
    testImplementation 'io.rest-assured:rest-assured:4.4.0'
    testImplementation 'org.junit.platform:junit-platform-suite-api:1.8.2'
    testImplementation 'org.junit.platform:junit-platform-console:1.8.2'
}

apply plugin: 'java'
apply plugin: 'maven'

group = 'dev.educosta'
version = '1.0.0-SNAPSHOT'
description = 'cucumber-bdd'
java {
    sourceCompatibility = JavaVersion.VERSION_11
    targetCompatibility = JavaVersion.VERSION_11
}

publishing {
    publications {
        maven(MavenPublication) {
            from(components.java)
        }
    }
}

test {
    useJUnitPlatform()
}

bootJar {
    enabled = false
}

jar {
    enabled = true
}

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}

task cucumber() {
    dependsOn assemble, testClasses

    doLast {
        if (System.getProperty("springProfile") == null)
            throw new GradleException('⚠️  The springProfile is not defied. Use -PspringProfile=<VALUE> in the gradle command line.')

        javaexec {
            environment "spring.profiles.active", System.getProperty("springProfile")
            main = "io.cucumber.core.cli.Main"
            classpath = configurations.cucumberRuntime + sourceSets.main.output + sourceSets.test.output
            args = [
                    '--plugin', 'pretty',
                    '--glue', 'dev.educosta', 'src/test/resources/features'
            ]
        }
    }
}
